JSWorld API

Summary
=======

Reactive World-style programming in Javascript.



Example
========
[Fill me in]




Types
=====

sexp: (cons node (listof sexp))
css-style: (node (listof (list string string)))







big-bang
========

plt.Jsworld.big_bang: node world (listof handler) (listof css-style) -> world

Starts a reactive computation.  If a big_bang is already in effect,
temporarily pauses that computation and begins a new nested one.



Handler functions
==================
plt.on_draw: (world -> (sexpof dom)) (world -> (sexpof css-style)) -> handler

Called whenever the world changes; the first argument produces a new
dom, and the second produces the new styles applied to that dom.


plt.on_tick: number (world -> world) -> handler

Called after n milliseconds to go from one world to the next.



plt.stop_when: (world -> boolean) (world -> void) -> handler

Registers a stop-when handler that consumes a world judger.  If the
judge says that th world is stopped, then the reactive computation
completes and the final world value is sent to the second function.







plt.Jsworld.p: assoc -> node


plt.Jsworld.div: assoc -> node


plt.Jsworld.button: (world -> world) assoc -> node


plt.Jsworld.input: string assoc -> node


plt.Jsworld.text: string assoc -> node
